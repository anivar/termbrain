name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        shell: [bash, zsh]
        exclude:
          - os: ubuntu-latest
            shell: zsh

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get update
          sudo apt-get install -y shellcheck sqlite3 jq
        else
          brew install shellcheck sqlite3 jq || true
        fi

    - name: Lint with shellcheck
      run: |
        find . -name "*.sh" -not -path "./.termbrain/*" -not -path "./tests/*" | xargs shellcheck -x

    - name: Run unit tests
      run: |
        ./tests/run_tests.sh --unit-only

    - name: Run E2E tests
      run: |
        ./tests/run_tests.sh --e2e-only
      env:
        SHELL: /bin/${{ matrix.shell }}

    - name: Test installation
      run: |
        # Test fresh install
        ./install.sh <<EOF
        n
        EOF
        
        # Verify installation
        test -f "$HOME/.termbrain/bin/termbrain"
        test -f "$HOME/.local/bin/tb"
        
        # Test basic command
        $HOME/.local/bin/tb version

    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.shell }}
        path: |
          /tmp/termbrain-test-*
          tests/*.log


  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: version
      run: |
        VERSION=$(cat VERSION)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Check if tag exists
      id: tag_check
      run: |
        if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create tag
      if: steps.tag_check.outputs.exists == 'false'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
        git push origin "v${{ steps.version.outputs.version }}"

    - name: Create Release
      if: steps.tag_check.outputs.exists == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ## What's Changed
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...v${{ steps.version.outputs.version }}
          
          ## Installation
          
          ```bash
          curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/v${{ steps.version.outputs.version }}/install.sh | bash
          ```
        draft: false
        prerelease: false